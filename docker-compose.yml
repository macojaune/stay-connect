version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: stayconnect_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: stayconnect_db
      POSTGRES_USER: stayconnect_user
      POSTGRES_PASSWORD: stayconnect_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - stayconnect_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stayconnect_user -d stayconnect_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AdonisJS Application
  adonis_app:
    build:
      context: ./stayConnect_adonis
      dockerfile: Dockerfile
    container_name: stayconnect_adonis
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3333
      HOST: 0.0.0.0
      LOG_LEVEL: info
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: stayconnect_user
      DB_PASSWORD: stayconnect_password
      DB_DATABASE: stayconnect_db
      APP_KEY: ${APP_KEY:-your-32-character-secret-key-here}
      SESSION_DRIVER: cookie
    ports:
      - "3333:3333"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - stayconnect_network
    volumes:
      - ./stayConnect_adonis/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Database Admin (optional)
  adminer:
    image: adminer:4.8.1
    container_name: stayconnect_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - stayconnect_network
    depends_on:
      - postgres
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local

networks:
  stayconnect_network:
    driver: bridge